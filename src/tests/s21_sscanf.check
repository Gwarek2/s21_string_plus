#test test_s21_sscanf_chars
    char *str = "a ^ 1";
    char s21_n1 = '\0';
    char s21_n2 = '\0';
    char s21_n3 = '\0';
    char n1 = '\0';
    char n2 = '\0';
    char n3 = '\0';
    s21_sscanf(str, "%c %c %c", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%c %c %c", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_string
    char *str = "string string STRING";
    char s21_buffer1[100];
    char s21_buffer2[100];
    char s21_buffer3[100];
    char buffer1[100];
    char buffer2[100];
    char buffer3[100];
    s21_sscanf(str, "%s %s %s", s21_buffer1, s21_buffer2, s21_buffer3);
    sscanf(str, "%s %s %s", buffer1, buffer2, buffer3);
    ck_assert_str_eq(s21_buffer1, buffer1);
    ck_assert_str_eq(s21_buffer2, buffer2);
    ck_assert_str_eq(s21_buffer3, buffer3);
#test test_s21_sscanf_hex
    char str[512];
    sprintf(str, "%x %#X", 123, -34);
    unsigned s21_n1 = 0;
    unsigned s21_n2 = 0;
    unsigned n1 = s21_n1;
    unsigned n2 = s21_n2;
    s21_sscanf(str, "%x %x", &s21_n1, &s21_n2);
    sscanf(str, "%x %x", &n1, &n2);
    ck_assert_uint_eq(s21_n1, n1);
    ck_assert_uint_eq(s21_n2, n2);
#test test_s21_sscanf_percent
    char *str = "12 % 34 0567 0890";
    int s21_n1, s21_n2;
    int n1, n2;
    s21_sscanf(str, "%2d%% %i", &s21_n1, &s21_n2);
    sscanf(str, "%2d%% %i", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_int
    char *str = "-1234 567 890";
    int s21_n1, s21_n2, s21_n3;
    int n1, n2, n3;
    s21_sscanf(str, "%4d %1i %d", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4d %1i %d", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_short
    char *str = "-25 7434";
    short s21_n1, s21_n2;
    short n1, n2;
    s21_sscanf(str, "%5hd %hd", &s21_n1, &s21_n2);
    sscanf(str, "%5hd %hd", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_long
    char *str = "-25 7434";
    long s21_n1, s21_n2;
    long n1, n2;
    s21_sscanf(str, "%2ld %ld", &s21_n1, &s21_n2);
    sscanf(str, "%2ld %ld", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_short_max_min
    char str[1024];
    sprintf(str, "%hd %hd", SHRT_MAX, SHRT_MIN);
    short s21_n1, s21_n2;
    short n1, n2;
    s21_sscanf(str, "%hd %hd", &s21_n1, &s21_n2);
    sscanf(str, "%hd %hd", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_int_max_min
    char str[1024];
    sprintf(str, "%d %d", INT_MAX, INT_MIN);
    int s21_n1, s21_n2;
    int n1, n2;
    s21_sscanf(str, "%d %d", &s21_n1, &s21_n2);
    sscanf(str, "%d %d", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_long_long
    char *str = "-25 7434";
    long long s21_n1, s21_n2;
    long long n1, n2;
    s21_sscanf(str, "%3lld %lld", &s21_n1, &s21_n2);
    sscanf(str, "%3lld %lld", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_long_max_min
    char str[1024];
    sprintf(str, "%ld %ld", LONG_MAX, LONG_MIN);
    long s21_n1, s21_n2;
    long n1, n2;
    s21_sscanf(str, "%ld %ld", &s21_n1, &s21_n2);
    sscanf(str, "%ld %ld", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_llong_max_min
    char str[1024];
    sprintf(str, "%lld %lld", LLONG_MAX, LLONG_MIN);
    long long s21_n1, s21_n2;
    long long n1, n2;
    s21_sscanf(str, "%lld %lld", &s21_n1, &s21_n2);
    sscanf(str, "%lld %lld", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_int_failure_1
    char *str = "-1234\n 567a 890";
    int s21_n1 = 0;
    int s21_n2 = 0;
    int s21_n3 = 0;
    int n1 = s21_n1;
    int n2 = s21_n2;
    int n3 = s21_n3;
    s21_sscanf(str, "%4d %1i %d", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4d %1i %d", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_int_failure_2
    char *str = "*1234 567 890";
    int s21_n1 = 0;
    int s21_n2 = 0;
    int s21_n3 = 0;
    int n1 = s21_n1;
    int n2 = s21_n2;
    int n3 = s21_n3;
    s21_sscanf(str, "%4d %1i %d", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4d %1i %d", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_int_failure_3
    char *str = "\t1234 0n0567 890";
    int s21_n1 = 0;
    int s21_n2 = 0;
    int s21_n3 = 0;
    int n1 = s21_n1;
    int n2 = s21_n2;
    int n3 = s21_n3;
    s21_sscanf(str, "%4d %1i %d", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4d %1i %d", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_uint
    char *str = "1234 567 890";
    unsigned s21_n1, s21_n2, s21_n3;
    unsigned n1, n2, n3;
    s21_sscanf(str, "%4u %1u %u", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4u %1u %u", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_suint
    char *str = "1234 567 890";
    unsigned short s21_n1, s21_n2, s21_n3;
    unsigned short n1, n2, n3;
    s21_sscanf(str, "%4hu %1hu %hu", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4hu %1hu %hu", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_luint
    char *str = "1234 567 890";
    unsigned long s21_n1, s21_n2, s21_n3;
    unsigned long n1, n2, n3;
    s21_sscanf(str, "%4lu %1lu %lu", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4lu %1lu %lu", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_lluint
    char *str = "1234 567 890";
    unsigned long long s21_n1, s21_n2, s21_n3;
    unsigned long long n1, n2, n3;
    s21_sscanf(str, "%4llu %1llu %llu", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4llu %1llu %llu", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_uint_max
    char str[1024];
    sprintf(str, "%u", UINT_MAX);
    unsigned s21_n1;
    unsigned n1;
    s21_sscanf(str, "%u", &s21_n1);
    sscanf(str, "%u", &n1);
    ck_assert_int_eq(s21_n1, n1);
#test test_s21_sscanf_luint_max
    char str[1024];
    sprintf(str, "%lu", ULONG_MAX);
    long unsigned s21_n1;
    long unsigned n1;
    s21_sscanf(str, "%lu", &s21_n1);
    sscanf(str, "%lu", &n1);
    ck_assert_int_eq(s21_n1, n1);
#test test_s21_sscanf_lluint_max
    char str[1024];
    sprintf(str, "%llu", ULLONG_MAX);
    long long unsigned s21_n1;
    long long unsigned n1;
    s21_sscanf(str, "%llu", &s21_n1);
    sscanf(str, "%llu", &n1);
    ck_assert_int_eq(s21_n1, n1);
#test test_s21_sscanf_uint_failure_1
    char *str = "-7234\n 567 890";
    unsigned s21_n1 = 0;
    unsigned s21_n2 = 0;
    unsigned s21_n3 = 0;
    unsigned n1 = s21_n1;
    unsigned n2 = s21_n2;
    unsigned n3 = s21_n3;
    s21_sscanf(str, "%4u %1u %u", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4u %1u %u", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_uint_failure_2
    char *str = "\n  \t 1234a 567 890";
    unsigned s21_n1 = 0;
    unsigned s21_n2 = 0;
    unsigned s21_n3 = 0;
    unsigned n1 = s21_n1;
    unsigned n2 = s21_n2;
    unsigned n3 = s21_n3;
    s21_sscanf(str, "%4u %1u %u", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4u %1u %u", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_uint_failure_3
    char *str = "1234 567a 890";
    unsigned s21_n1 = 0;
    unsigned s21_n2 = 0;
    unsigned s21_n3 = 0;
    unsigned n1 = s21_n1;
    unsigned n2 = s21_n2;
    unsigned n3 = s21_n3;
    s21_sscanf(str, "%4u %1u %u", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4u %1u %u", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_float
    char *str = "-1234.45 125.0034";
    float n1, n2, s21_n1, s21_n2;
    s21_sscanf(str, "%f %7f", &s21_n1, &s21_n2);
    sscanf(str, "%f %7f", &n1, &n2);
    ck_assert_float_eq_tol(s21_n1, n1, 1e-2);
    ck_assert_float_eq_tol(s21_n2, n2, 1e-4);
#test test_s21_sscanf_double
    char *str = "-1234.45 12.034";
    double n1, n2, s21_n1, s21_n2;
    s21_sscanf(str, "%lf %7lf", &s21_n1, &s21_n2);
    sscanf(str, "%lf %7lf", &n1, &n2);
    ck_assert_double_eq_tol(s21_n1, n1, 1e-2);
    ck_assert_double_eq_tol(s21_n2, n2, 1e-3);
#test test_s21_sscanf_long_double
    char *str = "-12.45767 125666354.034";
    long double n1, n2, s21_n1, s21_n2;
    s21_sscanf(str, "%Lf %7Lf", &s21_n1, &s21_n2);
    sscanf(str, "%Lf %7Lf", &n1, &n2);
    ck_assert_ldouble_eq_tol(s21_n1, n1, 1e-5);
    ck_assert_ldouble_eq_tol(s21_n2, n2, 1e-0);
#test test_s21_sscanf_decimal_failure_1
    char *str = "756.54a 567 890";
    double s21_n1 = 0;
    double s21_n2 = 0;
    double s21_n3 = 0;
    double n1 = s21_n1;
    double n2 = s21_n2;
    double n3 = s21_n3;
    s21_sscanf(str, "%lf %2lf %lf", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%lf %2lf %lf", &n1, &n2, &n3);
    ck_assert_double_eq_tol(s21_n1, n1, 1e-2);
    ck_assert_double_eq_tol(s21_n2, n2, 1e-2);
    ck_assert_double_eq_tol(s21_n3, n3, 1e-2);
#test test_s21_sscanf_decimal_false_failure_2
    char *str = "756.54.867 890";
    double s21_n1 = 0;
    double s21_n2 = 0;
    double s21_n3 = 0;
    double n1 = s21_n1;
    double n2 = s21_n2;
    double n3 = s21_n3;
    s21_sscanf(str, "%lf %2lf %lf", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%lf %2lf %lf", &n1, &n2, &n3);
    ck_assert_double_eq_tol(s21_n1, n1, 1e-2);
    ck_assert_double_eq_tol(s21_n2, n2, 1e-2);
    ck_assert_double_eq_tol(s21_n3, n3, 1e-2);
#test test_s21_sscanf_decimal_failure_3
    char *str = "756.54 567.a 890";
    double s21_n1 = 0;
    double s21_n2 = 0;
    double s21_n3 = 0;
    double n1 = s21_n1;
    double n2 = s21_n2;
    double n3 = s21_n3;
    s21_sscanf(str, "%lf %4lf %lf", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%lf %4lf %lf", &n1, &n2, &n3);
    ck_assert_double_eq_tol(s21_n1, n1, 1e-2);
    ck_assert_double_eq_tol(s21_n2, n2, 1e-2);
    ck_assert_double_eq_tol(s21_n3, n3, 1e-2);
#test test_s21_sscanf_oct
    char str[512];
    sprintf(str, "%o %#o", 123, -34);
    unsigned s21_n1 = 0;
    unsigned s21_n2 = 0;
    unsigned n1 = s21_n1;
    unsigned n2 = s21_n2;
    s21_sscanf(str, "%o %o", &s21_n1, &s21_n2);
    sscanf(str, "%o %o", &n1, &n2);
    ck_assert_uint_eq(s21_n1, n1);
    ck_assert_uint_eq(s21_n2, n2);
#test test_s21_sscanf_ptr
    char str[512];
    int n1, n2;
    sprintf(str, "%p %lx", &n1, (long unsigned) &n2);
    void *s21_p1 = NULL;
    void *s21_p2 = NULL;
    void *p1 = NULL;
    void *p2 = NULL;
    s21_sscanf(str, "%p %p", &s21_p1, &s21_p2);
    sscanf(str, "%p %p", &p1, &p2);
    ck_assert_ptr_eq(s21_p1, p1);
    ck_assert_ptr_eq(s21_p2, p2);
#test test_s21_sscanf_float_scientific_notation_1
    char *str = "1e+2 234.54545E-4 0.2342";
    double s21_n1 = 0;
    double s21_n2 = 0;
    double s21_n3 = 0;
    double n1 = s21_n1;
    double n2 = s21_n2;
    double n3 = s21_n3;
    s21_sscanf(str, "%2le %le %le", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%2le %le %le", &n1, &n2, &n3);
    ck_assert_float_eq_tol(s21_n1, n1, 1e-0);
    ck_assert_float_eq_tol(s21_n2, n2, 1e-9);
    ck_assert_float_eq_tol(s21_n3, n3, 1e-4);
