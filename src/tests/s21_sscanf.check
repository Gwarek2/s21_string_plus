#test test_s21_sscanf_uint_failure_1
    char *str = "-7234\n 567 890";
    unsigned s21_n1 = 0;
    unsigned s21_n2 = 0;
    unsigned s21_n3 = 0;
    unsigned n1 = s21_n1;
    unsigned n2 = s21_n2;
    unsigned n3 = s21_n3;
    s21_sscanf(str, "%4u %1u %u", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4u %1u %u", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_percent
    char *str = "12 % 34 0567 0890";
    int s21_n1, s21_n2;
    int n1, n2;
    s21_sscanf(str, "%2d%% %i", &s21_n1, &s21_n2);
    sscanf(str, "%2d%% %i", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_int
    char *str = "-1234 567 890";
    int s21_n1, s21_n2, s21_n3;
    int n1, n2, n3;
    s21_sscanf(str, "%4d %1i %d", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4d %1i %d", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_short
    char *str = "-25 7434";
    short s21_n1, s21_n2;
    short n1, n2;
    s21_sscanf(str, "%5hd %hd", &s21_n1, &s21_n2);
    sscanf(str, "%5hd %hd", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_long
    char *str = "-25 7434";
    long s21_n1, s21_n2;
    long n1, n2;
    s21_sscanf(str, "%2ld %ld", &s21_n1, &s21_n2);
    sscanf(str, "%2ld %ld", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_short_max_min
    char str[1024];
    sprintf(str, "%hd %hd", SHRT_MAX, SHRT_MIN);
    short s21_n1, s21_n2;
    short n1, n2;
    s21_sscanf(str, "%hd %hd", &s21_n1, &s21_n2);
    sscanf(str, "%hd %hd", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_int_max_min
    char str[1024];
    sprintf(str, "%d %d", INT_MAX, INT_MIN);
    int s21_n1, s21_n2;
    int n1, n2;
    s21_sscanf(str, "%d %d", &s21_n1, &s21_n2);
    sscanf(str, "%d %d", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_long_long
    char *str = "-25 7434";
    long long s21_n1, s21_n2;
    long long n1, n2;
    s21_sscanf(str, "%3lld %lld", &s21_n1, &s21_n2);
    sscanf(str, "%3lld %lld", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_long_max_min
    char str[1024];
    sprintf(str, "%ld %ld", LONG_MAX, LONG_MIN);
    long s21_n1, s21_n2;
    long n1, n2;
    s21_sscanf(str, "%ld %ld", &s21_n1, &s21_n2);
    sscanf(str, "%ld %ld", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_llong_max_min
    char str[1024];
    sprintf(str, "%lld %lld", LLONG_MAX, LLONG_MIN);
    long long s21_n1, s21_n2;
    long long n1, n2;
    s21_sscanf(str, "%lld %lld", &s21_n1, &s21_n2);
    sscanf(str, "%lld %lld", &n1, &n2);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
#test test_s21_sscanf_int_failure_1
    char *str = "-1234\n 567a 890";
    int s21_n1 = 0;
    int s21_n2 = 0;
    int s21_n3 = 0;
    int n1 = s21_n1;
    int n2 = s21_n2;
    int n3 = s21_n3;
    s21_sscanf(str, "%4d %1i %d", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4d %1i %d", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_int_failure_2
    char *str = "*1234 567 890";
    int s21_n1 = 0;
    int s21_n2 = 0;
    int s21_n3 = 0;
    int n1 = s21_n1;
    int n2 = s21_n2;
    int n3 = s21_n3;
    s21_sscanf(str, "%4d %1i %d", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4d %1i %d", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_int_failure_3
    char *str = "\t1234 0n0567 890";
    int s21_n1 = 0;
    int s21_n2 = 0;
    int s21_n3 = 0;
    int n1 = s21_n1;
    int n2 = s21_n2;
    int n3 = s21_n3;
    s21_sscanf(str, "%4d %1i %d", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4d %1i %d", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_uint
    char *str = "1234 567 890";
    unsigned s21_n1, s21_n2, s21_n3;
    unsigned n1, n2, n3;
    s21_sscanf(str, "%4u %1u %u", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4u %1u %u", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_suint
    char *str = "1234 567 890";
    unsigned short s21_n1, s21_n2, s21_n3;
    unsigned short n1, n2, n3;
    s21_sscanf(str, "%4hu %1hu %hu", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4hu %1hu %hu", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_luint
    char *str = "1234 567 890";
    unsigned long s21_n1, s21_n2, s21_n3;
    unsigned long n1, n2, n3;
    s21_sscanf(str, "%4lu %1lu %lu", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4lu %1lu %lu", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_lluint
    char *str = "1234 567 890";
    unsigned long long s21_n1, s21_n2, s21_n3;
    unsigned long long n1, n2, n3;
    s21_sscanf(str, "%4llu %1llu %llu", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4llu %1llu %llu", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_uint_max
    char str[1024];
    sprintf(str, "%u", UINT_MAX);
    unsigned s21_n1;
    unsigned n1;
    s21_sscanf(str, "%u", &s21_n1);
    sscanf(str, "%u", &n1);
    ck_assert_int_eq(s21_n1, n1);
#test test_s21_sscanf_luint_max
    char str[1024];
    sprintf(str, "%lu", ULONG_MAX);
    long unsigned s21_n1;
    long unsigned n1;
    s21_sscanf(str, "%lu", &s21_n1);
    sscanf(str, "%lu", &n1);
    ck_assert_int_eq(s21_n1, n1);
#test test_s21_sscanf_lluint_max
    char str[1024];
    sprintf(str, "%llu", ULLONG_MAX);
    long long unsigned s21_n1;
    long long unsigned n1;
    s21_sscanf(str, "%llu", &s21_n1);
    sscanf(str, "%llu", &n1);
    ck_assert_int_eq(s21_n1, n1);
#test test_s21_sscanf_uint_failure_2
    char *str = "\n  \t 1234a 567 890";
    unsigned s21_n1 = 0;
    unsigned s21_n2 = 0;
    unsigned s21_n3 = 0;
    unsigned n1 = s21_n1;
    unsigned n2 = s21_n2;
    unsigned n3 = s21_n3;
    s21_sscanf(str, "%4u %1u %u", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4u %1u %u", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
#test test_s21_sscanf_uint_failure_3
    char *str = "1234 567a 890";
    unsigned s21_n1 = 0;
    unsigned s21_n2 = 0;
    unsigned s21_n3 = 0;
    unsigned n1 = s21_n1;
    unsigned n2 = s21_n2;
    unsigned n3 = s21_n3;
    s21_sscanf(str, "%4u %1u %u", &s21_n1, &s21_n2, &s21_n3);
    sscanf(str, "%4u %1u %u", &n1, &n2, &n3);
    ck_assert_int_eq(s21_n1, n1);
    ck_assert_int_eq(s21_n2, n2);
    ck_assert_int_eq(s21_n3, n3);
